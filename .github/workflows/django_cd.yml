# 
name: master - Okteto CI/CD

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  #test:

  #  runs-on: ubuntu-latest
  #  strategy:
  #    max-parallel: 4
  #    matrix:
  #      python-version: [3.8]

  #  steps:
  #  - uses: actions/checkout@v3
  #  - name: Set up Python ${{ matrix.python-version }}
  #    uses: actions/setup-python@v3
  #    with:
  #      python-version: ${{ matrix.python-version }}
  #  - name: Install Dependencies
  #    run: |
  #      python -m pip install --upgrade pip
  #      pip install -r requirements.txt
  #  - name: make .env 
  #    uses: SpicyPizza/create-envfile@v1.3
  #    with:
  #      envkey_TEST_SECRET_KEY : ${{ secrets.TEST_SECRET_KEY }}
  #      envkey_TEST_DATABASE : ${{ secrets.TEST_DATABASE }}
  #      envkey_TEST_USER : ${{ secrets.TEST_USER }}
  #      envkey_TEST_PASSWORD : ${{ secrets.TEST_PASSWORD }}
  #      envkey_TEST_HOST : ${{ secrets.TEST_HOST }}
  #      envkey_TEST_PORT : ${{ secrets.TEST_PORT }}     
  #      file_name: .env
  #      fail_on_empty: false
  #  - name: Run Tests
  #    run: |
  #      python manage.py test --settings=settings.ci -v 3 --keepdb

  setup:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
 #   - name: Run a one-line script
 #     run: echo Hello, world!
 #   - name: Run a multi-line script
 #     run: |
 #       echo Add other actions to build,
 #       echo test, and deploy your project.
  
    - name: Login
      uses: actions-hub/docker/login@master
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    #- name: Build image
    #  uses: okteto/actions/build@v2
    #  with:
    #    token: ${{ secrets.OKTETO_TOKEN }}
    #    tag: ${{ secrets.DOCKER_USERNAME }}/graphql-api:${{ github.sha }}
        
    - uses: okteto/context@latest
      with:
        token: ${{ secrets.OKTETO_TOKEN }}
        #tag: ${{ secrets.DOCKER_USERNAME }}/hackernews:${{ github.sha }}
        args: -t

    - name: "Build"
      uses: okteto/build@latest
      with:
        tag: ${{ secrets.DOCKER_USERNAME }}/hackernews:${{ github.sha }}
        buildargs: ${{ secrets.BUILD }}
        global: true
    - name: Get Kubeconfig
      uses: okteto/actions/namespace@v2
      id: namespace
      with:
        token: ${{ secrets.OKTETO_TOKEN }}
        namespace: adsoftsito
        
    - name: Deploy and Wait
      uses: okteto/actions/deploy@v1
      env:
        KUBECONFIG: ${{ steps.namespace.outputs.kubeconfig }}
      with:
        namespace: adsoftsito
        manifest: k8s.yml
        tag: ${{ secrets.DOCKER_USERNAME }}/graphql-api:latest
        waitOn: deployment/adsoftsito
        
    - name: Verify
      uses: srt32/uptime@master
      with:
        url-to-hit: "https://https://adsoft-adsoftsito.cloud.okteto.net/"
        expected-statuses: "200"        
